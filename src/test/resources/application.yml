jwt:
  key: "123456789qwertyuiopasdfghjklzxcvbnmA"

spring:
  datasource:
    druid:
      url: jdbc:mysql://127.0.0.1:3306/weswap?useUnicode=true&characterEncoding=utf8&useSSL=false
      username: root
      password: 123456
      driver-class-name: com.mysql.cj.jdbc.Driver
      max-wait: 10000 #获取连接时最大等待时间，单位毫秒
      initial-size: 10 #初始化时建立物理连接的个数
      max-active: 100 #最大连接池数量
      min-idle: 10 #最小连接数
      time-between-eviction-runs-millis: 3600000 #检测连接的间隔时间
      min-evictable-idle-time-millis: 300000 #连接的最小生存时间
      test-while-idle: true  #检测连接是否有效
      test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      validation-query: SELECT 1 #用来检测连接是否有效的sql
      filters: stat #监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
      statview-servlet:
        url-pattern: /druid/*
        reset-enable: true #允许清空统计数据
        login-username: root #监控后台管理账号和密码
        login-password: root
      web-stat-filter:
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"

  sharding-sphere:
    mode:
      type: Standalone
      repository:
        type: Memory
    props:
      sql-show: true
      sql-simple: true

    datasource:
      type: druid
      names: ds1
      test1:
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/test1?useUnicode=true&characterEncoding=utf8&useSSL=false
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 123456
      test2:
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&characterEncoding=utf8&useSSL=false
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 123456
    rules:
      sharding:
        tables:
          test_order:
            actual-data-nodes: ds$->{[0,1]}.test_order
            # 分库策略
            database-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: database-inline
            # 分表策略
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: table-inline

  jackson:
    serialization:
      write-dates-as-timestamps: true
      write-date-keys-as-timestamps: false
      write-date-timestamps-as-nanoseconds: false

  application:
    name: test-api
  redis: # redis 配置
    host: 127.0.0.1
    port: 6379
    database: 0
    timeout: 1000ms
    lettuce:
      pool:
        enabled: true
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  common:
    task:
      core-pool-size: 4
      max-pool-size: 12
      queue-capacity: 100


