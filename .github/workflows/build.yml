name: CI

on:
    workflow_dispatch: # allows manual triggering
        inputs:
            create_release:
                description: 'Create new release'
                required: true
                type: boolean
    push:
        branches:
            - master
        paths: [ '.github/workflows/**', '**/pom.xml', '**/*.java' ]
    pull_request:
        types: [ opened, synchronize, reopened ]
        paths: [ '.github/workflows/**', '**/pom.xml', '**/*.java' ]
jobs:
    package:

        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v3
            -   name: Set up JDK 11
                uses: actions/setup-java@v3
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    cache: maven
            -   name: Build with Maven
                run: mvn -B package --file pom.xml

            # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
            -   name: Update dependency graph
                uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6


            -   uses: actions/upload-artifact@v3
                with:
                    name: common
                    path: target/*.jar

    release:
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}

        runs-on: ubuntu-latest

        needs:
            - package
        steps:
            -   name: Clone
                id: checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   name: Determine tag name
                id: tag
                shell: bash
                run: |
                    BUILD_NUMBER="$(git rev-list --count HEAD)"
                    SHORT_HASH="$(git rev-parse --short=7 HEAD)"
                    if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
                      echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
                    else
                      SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
                      echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" >> $GITHUB_OUTPUT
                    fi

            -   name: Download artifacts
                id: download-artifact
                uses: actions/download-artifact@v3

            -   name: Create release
                id: create_release
                uses: anzz1/action-create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ steps.tag.outputs.name }}

            -   name: Upload release
                id: upload_release
                uses: actions/github-script@v3
                with:
                    github-token: ${{secrets.GITHUB_TOKEN}}
                    script: |
                        const path = require('path');
                        const fs = require('fs');
                        const release_id = '${{ steps.create_release.outputs.id }}';
                        for (let file of await fs.readdirSync('./artifact')) {
                          if (path.extname(file) === '.jar') {
                            console.log('uploadReleaseAsset', file);
                            await github.repos.uploadReleaseAsset({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              release_id: release_id,
                              name: file,
                              data: await fs.readFileSync(`./artifact/${file}`)
                            });
                          }
                        }
